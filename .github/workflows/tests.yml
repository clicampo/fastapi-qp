name: Testing
on:
  pull_request:
    branches:
      - main
      - coverage-action
  push:
    branches:
      - main


jobs:
  run-tests:
    name: Run application tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      
      - name: Load cached $HOME/.local
        uses: actions/cache@v2
        with:
          path: ~/.local
          key: ${{ hashFiles('.github/workflows/tests.yml') }}

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1.3.1
        with:
          version: 1.1.13
          virtualenvs-create: true
          virtualenvs-in-project: true


      - name: Load cached venv
        id: cached-venv
        uses: actions/cache@v2
        env:
          CACHE_REVISION: '0'
        with:
          path: .venv
          key: ${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('**/pyproject.toml') }}-${{ env.CACHE_REVISION }}
        
      - name: Install dependencies
        if: steps.cached-venv.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Run tests
        run: |
          set -o pipefail
          source .venv/bin/activate
          pytest --junitxml=pytest.xml --cov=fastapi_qp test/

      - uses: codecov/codecov-action@v2
        with:
          files: ./pytest.xml